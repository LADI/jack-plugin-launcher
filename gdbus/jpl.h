/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __JPL_H__
#define __JPL_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.ladish.ApplicationManager0 */

#define JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0 (jpl_org_ladish_application_manager0_get_type ())
#define JPL_ORG_LADISH_APPLICATION_MANAGER0(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0, jplOrgLadishApplicationManager0))
#define JPL_IS_ORG_LADISH_APPLICATION_MANAGER0(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0))
#define JPL_ORG_LADISH_APPLICATION_MANAGER0_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0, jplOrgLadishApplicationManager0Iface))

struct _jplOrgLadishApplicationManager0;
typedef struct _jplOrgLadishApplicationManager0 jplOrgLadishApplicationManager0;
typedef struct _jplOrgLadishApplicationManager0Iface jplOrgLadishApplicationManager0Iface;

struct _jplOrgLadishApplicationManager0Iface
{
  GTypeInterface parent_iface;


  gboolean (*handle_application_ids) (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get) (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id);

  gboolean (*handle_start_application) (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id);

  gboolean (*handle_start_application_open_url) (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id,
    const gchar *arg_documentUrl);

  gboolean (*handle_stop_all_applications) (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_stop_all_applications2) (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_forceKill);

  gboolean (*handle_stop_application) (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id);

  gboolean (*handle_stop_application2) (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id,
    gboolean arg_forceKill);

  void (*application_about_to_be_removed) (
    jplOrgLadishApplicationManager0 *object,
    const gchar *arg_id);

  void (*application_added) (
    jplOrgLadishApplicationManager0 *object,
    const gchar *arg_id);

  void (*application_was_activated) (
    jplOrgLadishApplicationManager0 *object,
    const gchar *arg_id,
    const gchar *arg_aliasId);

  void (*count_changed) (
    jplOrgLadishApplicationManager0 *object);

};

GType jpl_org_ladish_application_manager0_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *jpl_org_ladish_application_manager0_interface_info (void);
guint jpl_org_ladish_application_manager0_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void jpl_org_ladish_application_manager0_complete_application_ids (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *unnamed_arg0);

void jpl_org_ladish_application_manager0_complete_get (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    GVariant *unnamed_arg1);

void jpl_org_ladish_application_manager0_complete_start_application_open_url (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    gboolean unnamed_arg2);

void jpl_org_ladish_application_manager0_complete_start_application (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation,
    gboolean unnamed_arg1);

void jpl_org_ladish_application_manager0_complete_stop_application2 (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation);

void jpl_org_ladish_application_manager0_complete_stop_application (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation);

void jpl_org_ladish_application_manager0_complete_stop_all_applications (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation);

void jpl_org_ladish_application_manager0_complete_stop_all_applications2 (
    jplOrgLadishApplicationManager0 *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void jpl_org_ladish_application_manager0_emit_application_was_activated (
    jplOrgLadishApplicationManager0 *object,
    const gchar *arg_id,
    const gchar *arg_aliasId);

void jpl_org_ladish_application_manager0_emit_count_changed (
    jplOrgLadishApplicationManager0 *object);

void jpl_org_ladish_application_manager0_emit_application_added (
    jplOrgLadishApplicationManager0 *object,
    const gchar *arg_id);

void jpl_org_ladish_application_manager0_emit_application_about_to_be_removed (
    jplOrgLadishApplicationManager0 *object,
    const gchar *arg_id);



/* D-Bus method calls: */
void jpl_org_ladish_application_manager0_call_application_ids (
    jplOrgLadishApplicationManager0 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean jpl_org_ladish_application_manager0_call_application_ids_finish (
    jplOrgLadishApplicationManager0 *proxy,
    gchar ***out_unnamed_arg0,
    GAsyncResult *res,
    GError **error);

gboolean jpl_org_ladish_application_manager0_call_application_ids_sync (
    jplOrgLadishApplicationManager0 *proxy,
    gchar ***out_unnamed_arg0,
    GCancellable *cancellable,
    GError **error);

void jpl_org_ladish_application_manager0_call_get (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean jpl_org_ladish_application_manager0_call_get_finish (
    jplOrgLadishApplicationManager0 *proxy,
    GVariant **out_unnamed_arg1,
    GAsyncResult *res,
    GError **error);

gboolean jpl_org_ladish_application_manager0_call_get_sync (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    GVariant **out_unnamed_arg1,
    GCancellable *cancellable,
    GError **error);

void jpl_org_ladish_application_manager0_call_start_application_open_url (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    const gchar *arg_documentUrl,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean jpl_org_ladish_application_manager0_call_start_application_open_url_finish (
    jplOrgLadishApplicationManager0 *proxy,
    gboolean *out_unnamed_arg2,
    GAsyncResult *res,
    GError **error);

gboolean jpl_org_ladish_application_manager0_call_start_application_open_url_sync (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    const gchar *arg_documentUrl,
    gboolean *out_unnamed_arg2,
    GCancellable *cancellable,
    GError **error);

void jpl_org_ladish_application_manager0_call_start_application (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean jpl_org_ladish_application_manager0_call_start_application_finish (
    jplOrgLadishApplicationManager0 *proxy,
    gboolean *out_unnamed_arg1,
    GAsyncResult *res,
    GError **error);

gboolean jpl_org_ladish_application_manager0_call_start_application_sync (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    gboolean *out_unnamed_arg1,
    GCancellable *cancellable,
    GError **error);

void jpl_org_ladish_application_manager0_call_stop_application2 (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    gboolean arg_forceKill,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean jpl_org_ladish_application_manager0_call_stop_application2_finish (
    jplOrgLadishApplicationManager0 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean jpl_org_ladish_application_manager0_call_stop_application2_sync (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    gboolean arg_forceKill,
    GCancellable *cancellable,
    GError **error);

void jpl_org_ladish_application_manager0_call_stop_application (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean jpl_org_ladish_application_manager0_call_stop_application_finish (
    jplOrgLadishApplicationManager0 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean jpl_org_ladish_application_manager0_call_stop_application_sync (
    jplOrgLadishApplicationManager0 *proxy,
    const gchar *arg_id,
    GCancellable *cancellable,
    GError **error);

void jpl_org_ladish_application_manager0_call_stop_all_applications (
    jplOrgLadishApplicationManager0 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean jpl_org_ladish_application_manager0_call_stop_all_applications_finish (
    jplOrgLadishApplicationManager0 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean jpl_org_ladish_application_manager0_call_stop_all_applications_sync (
    jplOrgLadishApplicationManager0 *proxy,
    GCancellable *cancellable,
    GError **error);

void jpl_org_ladish_application_manager0_call_stop_all_applications2 (
    jplOrgLadishApplicationManager0 *proxy,
    gboolean arg_forceKill,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean jpl_org_ladish_application_manager0_call_stop_all_applications2_finish (
    jplOrgLadishApplicationManager0 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean jpl_org_ladish_application_manager0_call_stop_all_applications2_sync (
    jplOrgLadishApplicationManager0 *proxy,
    gboolean arg_forceKill,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_PROXY (jpl_org_ladish_application_manager0_proxy_get_type ())
#define JPL_ORG_LADISH_APPLICATION_MANAGER0_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_PROXY, jplOrgLadishApplicationManager0Proxy))
#define JPL_ORG_LADISH_APPLICATION_MANAGER0_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_PROXY, jplOrgLadishApplicationManager0ProxyClass))
#define JPL_ORG_LADISH_APPLICATION_MANAGER0_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_PROXY, jplOrgLadishApplicationManager0ProxyClass))
#define JPL_IS_ORG_LADISH_APPLICATION_MANAGER0_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_PROXY))
#define JPL_IS_ORG_LADISH_APPLICATION_MANAGER0_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_PROXY))

typedef struct _jplOrgLadishApplicationManager0Proxy jplOrgLadishApplicationManager0Proxy;
typedef struct _jplOrgLadishApplicationManager0ProxyClass jplOrgLadishApplicationManager0ProxyClass;
typedef struct _jplOrgLadishApplicationManager0ProxyPrivate jplOrgLadishApplicationManager0ProxyPrivate;

struct _jplOrgLadishApplicationManager0Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  jplOrgLadishApplicationManager0ProxyPrivate *priv;
};

struct _jplOrgLadishApplicationManager0ProxyClass
{
  GDBusProxyClass parent_class;
};

GType jpl_org_ladish_application_manager0_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (jplOrgLadishApplicationManager0Proxy, g_object_unref)
#endif

void jpl_org_ladish_application_manager0_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
jplOrgLadishApplicationManager0 *jpl_org_ladish_application_manager0_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
jplOrgLadishApplicationManager0 *jpl_org_ladish_application_manager0_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void jpl_org_ladish_application_manager0_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
jplOrgLadishApplicationManager0 *jpl_org_ladish_application_manager0_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
jplOrgLadishApplicationManager0 *jpl_org_ladish_application_manager0_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_SKELETON (jpl_org_ladish_application_manager0_skeleton_get_type ())
#define JPL_ORG_LADISH_APPLICATION_MANAGER0_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_SKELETON, jplOrgLadishApplicationManager0Skeleton))
#define JPL_ORG_LADISH_APPLICATION_MANAGER0_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_SKELETON, jplOrgLadishApplicationManager0SkeletonClass))
#define JPL_ORG_LADISH_APPLICATION_MANAGER0_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_SKELETON, jplOrgLadishApplicationManager0SkeletonClass))
#define JPL_IS_ORG_LADISH_APPLICATION_MANAGER0_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_SKELETON))
#define JPL_IS_ORG_LADISH_APPLICATION_MANAGER0_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), JPL_TYPE_ORG_LADISH_APPLICATION_MANAGER0_SKELETON))

typedef struct _jplOrgLadishApplicationManager0Skeleton jplOrgLadishApplicationManager0Skeleton;
typedef struct _jplOrgLadishApplicationManager0SkeletonClass jplOrgLadishApplicationManager0SkeletonClass;
typedef struct _jplOrgLadishApplicationManager0SkeletonPrivate jplOrgLadishApplicationManager0SkeletonPrivate;

struct _jplOrgLadishApplicationManager0Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  jplOrgLadishApplicationManager0SkeletonPrivate *priv;
};

struct _jplOrgLadishApplicationManager0SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType jpl_org_ladish_application_manager0_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (jplOrgLadishApplicationManager0Skeleton, g_object_unref)
#endif

jplOrgLadishApplicationManager0 *jpl_org_ladish_application_manager0_skeleton_new (void);


G_END_DECLS

#endif /* __JPL_H__ */
